// File generated by proxmox json schema, DO NOT EDIT

package dns

import (
	"context"
)

const (
	Type_POWERDNS Type = "powerdns"
)

type Type string

func PtrType(i Type) *Type {
	return &i
}

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexRequest struct {

	// The following parameters are optional
	Type *Type `url:"type,omitempty" json:"type,omitempty"` // Only list sdn dns of specific type
}
type _IndexRequest IndexRequest

type IndexResponse struct {
	Dns  string `url:"dns" json:"dns"`
	Type string `url:"type" json:"type"`
}
type _IndexResponse IndexResponse

type CreateRequest struct {
	Dns  string `url:"dns" json:"dns"` // The SDN dns object identifier.
	Key  string `url:"key" json:"key"`
	Type Type   `url:"type" json:"type"` // Plugin type.
	Url  string `url:"url" json:"url"`

	// The following parameters are optional
	Reversemaskv6 *int `url:"reversemaskv6,omitempty" json:"reversemaskv6,omitempty"`
	Reversev6mask *int `url:"reversev6mask,omitempty" json:"reversev6mask,omitempty"`
	Ttl           *int `url:"ttl,omitempty" json:"ttl,omitempty"`
}
type _CreateRequest CreateRequest

type FindRequest struct {
	Dns string `url:"dns" json:"dns"` // The SDN dns object identifier.

}
type _FindRequest FindRequest

type UpdateRequest struct {
	Dns string `url:"dns" json:"dns"` // The SDN dns object identifier.

	// The following parameters are optional
	Delete        *string `url:"delete,omitempty" json:"delete,omitempty"` // A list of settings you want to delete.
	Digest        *string `url:"digest,omitempty" json:"digest,omitempty"` // Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.
	Key           *string `url:"key,omitempty" json:"key,omitempty"`
	Reversemaskv6 *int    `url:"reversemaskv6,omitempty" json:"reversemaskv6,omitempty"`
	Ttl           *int    `url:"ttl,omitempty" json:"ttl,omitempty"`
	Url           *string `url:"url,omitempty" json:"url,omitempty"`
}
type _UpdateRequest UpdateRequest

type DeleteRequest struct {
	Dns string `url:"dns" json:"dns"` // The SDN dns object identifier.

}
type _DeleteRequest DeleteRequest

// Index SDN dns index.
func (c *Client) Index(ctx context.Context, req IndexRequest) ([]IndexResponse, error) {
	var resp []IndexResponse

	err := c.httpClient.Do(ctx, "/cluster/sdn/dns", "GET", &resp, req)
	return resp, err
}

// Create Create a new sdn dns object.
func (c *Client) Create(ctx context.Context, req CreateRequest) error {

	err := c.httpClient.Do(ctx, "/cluster/sdn/dns", "POST", nil, req)
	return err
}

// Find Read sdn dns configuration.
func (c *Client) Find(ctx context.Context, req FindRequest) (map[string]interface{}, error) {
	var resp map[string]interface{}

	err := c.httpClient.Do(ctx, "/cluster/sdn/dns/{dns}", "GET", &resp, req)
	return resp, err
}

// Update Update sdn dns object configuration.
func (c *Client) Update(ctx context.Context, req UpdateRequest) error {

	err := c.httpClient.Do(ctx, "/cluster/sdn/dns/{dns}", "PUT", nil, req)
	return err
}

// Delete Delete sdn dns object configuration.
func (c *Client) Delete(ctx context.Context, req DeleteRequest) error {

	err := c.httpClient.Do(ctx, "/cluster/sdn/dns/{dns}", "DELETE", nil, req)
	return err
}
