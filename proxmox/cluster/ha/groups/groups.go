// File generated by proxmox json schema, DO NOT EDIT

package groups

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexResponse []*struct {
	Group string `url:"group",json:"group"`
}

// Index Get HA groups.
func (c *Client) Index(ctx context.Context) (*IndexResponse, error) {
	var resp *IndexResponse

	err := c.httpClient.Do(ctx, "/cluster/ha/groups", "GET", &resp, nil)
	return resp, err
}

type CreateRequest struct {
	Comment    *string `url:"comment,omitempty",json:"comment,omitempty"`
	Group      string  `url:"group",json:"group"`
	Nodes      string  `url:"nodes",json:"nodes"`
	Nofailback *bool   `url:"nofailback,omitempty",json:"nofailback,omitempty"`
	Restricted *bool   `url:"restricted,omitempty",json:"restricted,omitempty"`
	Type       *string `url:"type,omitempty",json:"type,omitempty"`
}

type CreateResponse map[string]interface{}

// Create Create a new HA group.
func (c *Client) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	var resp *CreateResponse

	err := c.httpClient.Do(ctx, "/cluster/ha/groups", "POST", &resp, req)
	return resp, err
}

type FindRequest struct {
	Group string `url:"group",json:"group"`
}

// Find Read ha group configuration.
func (c *Client) Find(ctx context.Context, req *FindRequest) error {

	err := c.httpClient.Do(ctx, "/cluster/ha/groups/{group}", "GET", nil, req)
	return err
}

type UpdateRequest struct {
	Group      string  `url:"group",json:"group"`
	Nodes      *string `url:"nodes,omitempty",json:"nodes,omitempty"`
	Nofailback *bool   `url:"nofailback,omitempty",json:"nofailback,omitempty"`
	Restricted *bool   `url:"restricted,omitempty",json:"restricted,omitempty"`
	Comment    *string `url:"comment,omitempty",json:"comment,omitempty"`
	Delete     *string `url:"delete,omitempty",json:"delete,omitempty"`
	Digest     *string `url:"digest,omitempty",json:"digest,omitempty"`
}

type UpdateResponse map[string]interface{}

// Update Update ha group configuration.
func (c *Client) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	var resp *UpdateResponse

	err := c.httpClient.Do(ctx, "/cluster/ha/groups/{group}", "PUT", &resp, req)
	return resp, err
}

type DeleteRequest struct {
	Group string `url:"group",json:"group"`
}

type DeleteResponse map[string]interface{}

// Delete Delete ha group configuration.
func (c *Client) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	var resp *DeleteResponse

	err := c.httpClient.Do(ctx, "/cluster/ha/groups/{group}", "DELETE", &resp, req)
	return resp, err
}
