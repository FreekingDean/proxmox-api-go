// File generated by proxmox json schema, DO NOT EDIT

package ceph

import (
	"context"
)

const (
	Scope_ALL      Scope = "all"
	Scope_VERSIONS Scope = "versions"
)

type Scope string

func PtrScope(i Scope) *Scope {
	return &i
}

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type MetadataRequest struct {

	// The following parameters are optional
	Scope *Scope `url:"scope,omitempty" json:"scope,omitempty"`
}

// Index Cluster ceph index.
func (c *Client) Index(ctx context.Context) ([]map[string]interface{}, error) {
	var resp []map[string]interface{}

	err := c.httpClient.Do(ctx, "/cluster/ceph", "GET", &resp, nil)
	return resp, err
}

// Metadata Get ceph metadata.
func (c *Client) Metadata(ctx context.Context, req MetadataRequest) (map[string]interface{}, error) {
	var resp map[string]interface{}

	err := c.httpClient.Do(ctx, "/cluster/ceph/metadata", "GET", &resp, req)
	return resp, err
}

// Status Get ceph status.
func (c *Client) Status(ctx context.Context) (map[string]interface{}, error) {
	var resp map[string]interface{}

	err := c.httpClient.Do(ctx, "/cluster/ceph/status", "GET", &resp, nil)
	return resp, err
}
