// File generated by proxmox json schema, DO NOT EDIT

package server

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexResponse []*struct {
	Disable bool   `url:"disable",json:"disable"` // Flag to disable the plugin.
	Id      string `url:"id",json:"id"`           // The ID of the entry.
	Port    int    `url:"port",json:"port"`       // Server network port
	Server  string `url:"server",json:"server"`   // Server dns name or IP address
	Type    string `url:"type",json:"type"`       // Plugin type.

}

// Index List configured metric servers.
func (c *Client) Index(ctx context.Context) (*IndexResponse, error) {
	var resp *IndexResponse

	err := c.httpClient.Do(ctx, "/cluster/metrics/server", "GET", &resp, nil)
	return resp, err
}

type FindRequest struct {
	Id string `url:"id",json:"id"`
}

type FindResponse map[string]interface{}

// Find Read metric server configuration.
func (c *Client) Find(ctx context.Context, req *FindRequest) (*FindResponse, error) {
	var resp *FindResponse

	err := c.httpClient.Do(ctx, "/cluster/metrics/server/{id}", "GET", &resp, req)
	return resp, err
}

type ChildCreateRequest struct {
	Id     string `url:"id",json:"id"`         // The ID of the entry.
	Port   int    `url:"port",json:"port"`     // server network port
	Server string `url:"server",json:"server"` // server dns name or IP address
	Type   string `url:"type",json:"type"`     // Plugin type.

	// The following parameters are optional
	ApiPathPrefix     *string `url:"api-path-prefix,omitempty",json:"api-path-prefix,omitempty"` // An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy.
	Bucket            *string `url:"bucket,omitempty",json:"bucket,omitempty"`                   // The InfluxDB bucket/db. Only necessary when using the http v2 api.
	Disable           *bool   `url:"disable,omitempty",json:"disable,omitempty"`                 // Flag to disable the plugin.
	Influxdbproto     *string `url:"influxdbproto,omitempty",json:"influxdbproto,omitempty"`
	MaxBodySize       *int    `url:"max-body-size,omitempty",json:"max-body-size,omitempty"`           // InfluxDB max-body-size in bytes. Requests are batched up to this size.
	Mtu               *int    `url:"mtu,omitempty",json:"mtu,omitempty"`                               // MTU for metrics transmission over UDP
	Organization      *string `url:"organization,omitempty",json:"organization,omitempty"`             // The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api.
	Path              *string `url:"path,omitempty",json:"path,omitempty"`                             // root graphite path (ex: proxmox.mycluster.mykey)
	Proto             *string `url:"proto,omitempty",json:"proto,omitempty"`                           // Protocol to send graphite data. TCP or UDP (default)
	Timeout           *int    `url:"timeout,omitempty",json:"timeout,omitempty"`                       // graphite TCP socket timeout (default=1)
	Token             *string `url:"token,omitempty",json:"token,omitempty"`                           // The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead.
	VerifyCertificate *bool   `url:"verify-certificate,omitempty",json:"verify-certificate,omitempty"` // Set to 0 to disable certificate verification for https endpoints.
}

type ChildCreateResponse map[string]interface{}

// ChildCreate Create a new external metric server config
func (c *Client) ChildCreate(ctx context.Context, req *ChildCreateRequest) (*ChildCreateResponse, error) {
	var resp *ChildCreateResponse

	err := c.httpClient.Do(ctx, "/cluster/metrics/server/{id}", "POST", &resp, req)
	return resp, err
}

type UpdateRequest struct {
	Id     string `url:"id",json:"id"`         // The ID of the entry.
	Port   int    `url:"port",json:"port"`     // server network port
	Server string `url:"server",json:"server"` // server dns name or IP address

	// The following parameters are optional
	ApiPathPrefix     *string `url:"api-path-prefix,omitempty",json:"api-path-prefix,omitempty"` // An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy.
	Bucket            *string `url:"bucket,omitempty",json:"bucket,omitempty"`                   // The InfluxDB bucket/db. Only necessary when using the http v2 api.
	Delete            *string `url:"delete,omitempty",json:"delete,omitempty"`                   // A list of settings you want to delete.
	Digest            *string `url:"digest,omitempty",json:"digest,omitempty"`                   // Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.
	Disable           *bool   `url:"disable,omitempty",json:"disable,omitempty"`                 // Flag to disable the plugin.
	Influxdbproto     *string `url:"influxdbproto,omitempty",json:"influxdbproto,omitempty"`
	MaxBodySize       *int    `url:"max-body-size,omitempty",json:"max-body-size,omitempty"`           // InfluxDB max-body-size in bytes. Requests are batched up to this size.
	Mtu               *int    `url:"mtu,omitempty",json:"mtu,omitempty"`                               // MTU for metrics transmission over UDP
	Organization      *string `url:"organization,omitempty",json:"organization,omitempty"`             // The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api.
	Path              *string `url:"path,omitempty",json:"path,omitempty"`                             // root graphite path (ex: proxmox.mycluster.mykey)
	Proto             *string `url:"proto,omitempty",json:"proto,omitempty"`                           // Protocol to send graphite data. TCP or UDP (default)
	Timeout           *int    `url:"timeout,omitempty",json:"timeout,omitempty"`                       // graphite TCP socket timeout (default=1)
	Token             *string `url:"token,omitempty",json:"token,omitempty"`                           // The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead.
	VerifyCertificate *bool   `url:"verify-certificate,omitempty",json:"verify-certificate,omitempty"` // Set to 0 to disable certificate verification for https endpoints.
}

type UpdateResponse map[string]interface{}

// Update Update metric server configuration.
func (c *Client) Update(ctx context.Context, req *UpdateRequest) (*UpdateResponse, error) {
	var resp *UpdateResponse

	err := c.httpClient.Do(ctx, "/cluster/metrics/server/{id}", "PUT", &resp, req)
	return resp, err
}

type DeleteRequest struct {
	Id string `url:"id",json:"id"`
}

type DeleteResponse map[string]interface{}

// Delete Remove Metric server.
func (c *Client) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	var resp *DeleteResponse

	err := c.httpClient.Do(ctx, "/cluster/metrics/server/{id}", "DELETE", &resp, req)
	return resp, err
}
