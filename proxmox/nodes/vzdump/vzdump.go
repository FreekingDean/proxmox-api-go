// File generated by proxmox json schema, DO NOT EDIT

package vzdump

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type CreateRequest map[string]interface{}

type CreateResponse string

// Create Create backup.
func (c *Client) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	var resp *CreateResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/vzdump", "POST", &resp, req)
	return resp, err
}

type DefaultsRequest struct {
	Node string `url:"node",json:"node"` // The cluster node name.

	// The following parameters are optional
	Storage *string `url:"storage,omitempty",json:"storage,omitempty"` // The storage identifier.
}

type DefaultsResponse map[string]interface{}

// Defaults Get the currently configured vzdump defaults.
func (c *Client) Defaults(ctx context.Context, req *DefaultsRequest) (*DefaultsResponse, error) {
	var resp *DefaultsResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/vzdump/defaults", "GET", &resp, req)
	return resp, err
}

type ExtractconfigRequest struct {
	Node   string `url:"node",json:"node"`     // The cluster node name.
	Volume string `url:"volume",json:"volume"` // Volume identifier

}

type ExtractconfigResponse string

// Extractconfig Extract configuration from vzdump backup archive.
func (c *Client) Extractconfig(ctx context.Context, req *ExtractconfigRequest) (*ExtractconfigResponse, error) {
	var resp *ExtractconfigResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/vzdump/extractconfig", "GET", &resp, req)
	return resp, err
}
