// File generated by proxmox json schema, DO NOT EDIT

package zones

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexRequest struct {
	Node string `url:"node",json:"node"`
}

type IndexResponse []*struct {
	Status string `url:"status",json:"status"`
	Zone   string `url:"zone",json:"zone"`
}

// Index Get status for all zones.
func (c *Client) Index(ctx context.Context, req *IndexRequest) (*IndexResponse, error) {
	var resp *IndexResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/sdn/zones", "GET", &resp, req)
	return resp, err
}

type FindRequest struct {
	Zone string `url:"zone",json:"zone"`
	Node string `url:"node",json:"node"`
}

type FindResponse []*struct {
	Subdir string `url:"subdir",json:"subdir"`
}

// Find
func (c *Client) Find(ctx context.Context, req *FindRequest) (*FindResponse, error) {
	var resp *FindResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/sdn/zones/{zone}", "GET", &resp, req)
	return resp, err
}

type IndexContentRequest struct {
	Node string `url:"node",json:"node"`
	Zone string `url:"zone",json:"zone"`
}

type IndexContentResponse []*struct {
	Vnet      string  `url:"vnet",json:"vnet"`
	Status    *string `url:"status,omitempty",json:"status,omitempty"`
	Statusmsg *string `url:"statusmsg,omitempty",json:"statusmsg,omitempty"`
}

// IndexContent List zone content.
func (c *Client) IndexContent(ctx context.Context, req *IndexContentRequest) (*IndexContentResponse, error) {
	var resp *IndexContentResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/sdn/zones/{zone}/content", "GET", &resp, req)
	return resp, err
}
