// File generated by proxmox json schema, DO NOT EDIT

package mds

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexRequest struct {
	Node string `url:"node",json:"node"`
}

type IndexResponse []*struct {
	Addr          *string `url:"addr,omitempty",json:"addr,omitempty"`
	Host          *string `url:"host,omitempty",json:"host,omitempty"`
	Rank          *int    `url:"rank,omitempty",json:"rank,omitempty"`
	StandbyReplay *bool   `url:"standby_replay,omitempty",json:"standby_replay,omitempty"`
	State         string  `url:"state",json:"state"`
}

// Index MDS directory index.
func (c *Client) Index(ctx context.Context, req *IndexRequest) (*IndexResponse, error) {
	var resp *IndexResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/ceph/mds", "GET", &resp, req)
	return resp, err
}

type ChildCreateRequest struct {
	Hotstandby *bool   `url:"hotstandby,omitempty",json:"hotstandby,omitempty"`
	Name       *string `url:"name,omitempty",json:"name,omitempty"`
	Node       string  `url:"node",json:"node"`
}

type ChildCreateResponse string

// ChildCreate Create Ceph Metadata Server (MDS)
func (c *Client) ChildCreate(ctx context.Context, req *ChildCreateRequest) (*ChildCreateResponse, error) {
	var resp *ChildCreateResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/ceph/mds/{name}", "POST", &resp, req)
	return resp, err
}

type DeleteRequest struct {
	Name string `url:"name",json:"name"`
	Node string `url:"node",json:"node"`
}

type DeleteResponse string

// Delete Destroy Ceph Metadata Server
func (c *Client) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	var resp *DeleteResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/ceph/mds/{name}", "DELETE", &resp, req)
	return resp, err
}
