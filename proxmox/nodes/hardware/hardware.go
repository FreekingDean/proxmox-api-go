// File generated by proxmox json schema, DO NOT EDIT

package hardware

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexRequest struct {
	Node string `url:"node",json:"node"`
}

type IndexResponse []*struct {
	Type string `url:"type",json:"type"`
}

// Index Index of hardware types
func (c *Client) Index(ctx context.Context, req *IndexRequest) (*IndexResponse, error) {
	var resp *IndexResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/hardware", "GET", &resp, req)
	return resp, err
}

type UsbscanUsbRequest struct {
	Node string `url:"node",json:"node"`
}

type UsbscanUsbResponse []*struct {
	Vendid       string  `url:"vendid",json:"vendid"`
	Class        int     `url:"class",json:"class"`
	Level        int     `url:"level",json:"level"`
	Prodid       string  `url:"prodid",json:"prodid"`
	Port         int     `url:"port",json:"port"`
	Product      *string `url:"product,omitempty",json:"product,omitempty"`
	Serial       *string `url:"serial,omitempty",json:"serial,omitempty"`
	Speed        string  `url:"speed",json:"speed"`
	Usbpath      *string `url:"usbpath,omitempty",json:"usbpath,omitempty"`
	Busnum       int     `url:"busnum",json:"busnum"`
	Devnum       int     `url:"devnum",json:"devnum"`
	Manufacturer *string `url:"manufacturer,omitempty",json:"manufacturer,omitempty"`
}

// UsbscanUsb List local USB devices.
func (c *Client) UsbscanUsb(ctx context.Context, req *UsbscanUsbRequest) (*UsbscanUsbResponse, error) {
	var resp *UsbscanUsbResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/hardware/usb", "GET", &resp, req)
	return resp, err
}
