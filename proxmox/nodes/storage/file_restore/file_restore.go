// File generated by proxmox json schema, DO NOT EDIT

package file_restore

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type ListRequest struct {
	Filepath string `url:"filepath",json:"filepath"`
	Node     string `url:"node",json:"node"`
	Storage  string `url:"storage",json:"storage"`
	Volume   string `url:"volume",json:"volume"`
}

type ListResponse []*struct {
	Filepath string `url:"filepath",json:"filepath"`
	Leaf     bool   `url:"leaf",json:"leaf"`
	Mtime    *int   `url:"mtime,omitempty",json:"mtime,omitempty"`
	Size     *int   `url:"size,omitempty",json:"size,omitempty"`
	Text     string `url:"text",json:"text"`
	Type     string `url:"type",json:"type"`
}

// List List files and directories for single file restore under the given path.
func (c *Client) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	var resp *ListResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/storage/{storage}/file-restore/list", "GET", &resp, req)
	return resp, err
}

type DownloadRequest struct {
	Filepath string `url:"filepath",json:"filepath"`
	Node     string `url:"node",json:"node"`
	Storage  string `url:"storage",json:"storage"`
	Volume   string `url:"volume",json:"volume"`
}

type DownloadResponse interface{}

// Download Extract a file or directory (as zip archive) from a PBS backup.
func (c *Client) Download(ctx context.Context, req *DownloadRequest) (*DownloadResponse, error) {
	var resp *DownloadResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/storage/{storage}/file-restore/download", "GET", &resp, req)
	return resp, err
}
