// File generated by proxmox json schema, DO NOT EDIT

package directory

import (
	"context"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexRequest struct {
	Node string `url:"node",json:"node"`
}

type IndexResponse []*struct {
	Device   string `url:"device",json:"device"`
	Options  string `url:"options",json:"options"`
	Path     string `url:"path",json:"path"`
	Type     string `url:"type",json:"type"`
	Unitfile string `url:"unitfile",json:"unitfile"`
}

// Index PVE Managed Directory storages.
func (c *Client) Index(ctx context.Context, req *IndexRequest) (*IndexResponse, error) {
	var resp *IndexResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/disks/directory", "GET", &resp, req)
	return resp, err
}

type CreateRequest struct {
	AddStorage *bool   `url:"add_storage,omitempty",json:"add_storage,omitempty"`
	Device     string  `url:"device",json:"device"`
	Filesystem *string `url:"filesystem,omitempty",json:"filesystem,omitempty"`
	Name       string  `url:"name",json:"name"`
	Node       string  `url:"node",json:"node"`
}

type CreateResponse string

// Create Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.
func (c *Client) Create(ctx context.Context, req *CreateRequest) (*CreateResponse, error) {
	var resp *CreateResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/disks/directory", "POST", &resp, req)
	return resp, err
}

type DeleteRequest struct {
	CleanupDisks  *bool  `url:"cleanup-disks,omitempty",json:"cleanup-disks,omitempty"`
	Name          string `url:"name",json:"name"`
	Node          string `url:"node",json:"node"`
	CleanupConfig *bool  `url:"cleanup-config,omitempty",json:"cleanup-config,omitempty"`
}

type DeleteResponse string

// Delete Unmounts the storage and removes the mount unit.
func (c *Client) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	var resp *DeleteResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/disks/directory/{name}", "DELETE", &resp, req)
	return resp, err
}
