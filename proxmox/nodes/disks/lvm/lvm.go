// File generated by proxmox json schema, DO NOT EDIT

package lvm

import (
	"context"
	"github.com/FreekingDean/proxmox-api-go/internal/util"
)

type HTTPClient interface {
	Do(context.Context, string, string, interface{}, interface{}) error
}

type Client struct {
	httpClient HTTPClient
}

func New(c HTTPClient) *Client {
	return &Client{
		httpClient: c,
	}
}

type IndexRequest struct {
	Node string `url:"node" json:"node"` // The cluster node name.

}

type Children struct {
	Free int          `url:"free" json:"free"` // The free bytes in the physical volume
	Leaf util.PVEBool `url:"leaf" json:"leaf"`
	Name string       `url:"name" json:"name"` // The name of the physical volume
	Size int          `url:"size" json:"size"` // The size of the physical volume in bytes

}

type SubChildren struct {
	Free int          `url:"free" json:"free"` // The free bytes in the volume group
	Leaf util.PVEBool `url:"leaf" json:"leaf"`
	Name string       `url:"name" json:"name"` // The name of the volume group
	Size int          `url:"size" json:"size"` // The size of the volume group in bytes

	// The following parameters are optional
	Children *[]Children `url:"children,omitempty" json:"children,omitempty"` // The underlying physical volumes
}

type IndexResponse struct {
	Children []Children   `url:"children" json:"children"`
	Leaf     util.PVEBool `url:"leaf" json:"leaf"`
}

type CreateRequest struct {
	Device string `url:"device" json:"device"` // The block device you want to create the volume group on
	Name   string `url:"name" json:"name"`     // The storage identifier.
	Node   string `url:"node" json:"node"`     // The cluster node name.

	// The following parameters are optional
	AddStorage *util.PVEBool `url:"add_storage,omitempty" json:"add_storage,omitempty"` // Configure storage using the Volume Group
}

type DeleteRequest struct {
	Name string `url:"name" json:"name"` // The storage identifier.
	Node string `url:"node" json:"node"` // The cluster node name.

	// The following parameters are optional
	CleanupConfig *util.PVEBool `url:"cleanup-config,omitempty" json:"cleanup-config,omitempty"` // Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).
	CleanupDisks  *util.PVEBool `url:"cleanup-disks,omitempty" json:"cleanup-disks,omitempty"`   // Also wipe disks so they can be repurposed afterwards.
}

// Index List LVM Volume Groups
func (c *Client) Index(ctx context.Context, req IndexRequest) (IndexResponse, error) {
	var resp IndexResponse

	err := c.httpClient.Do(ctx, "/nodes/{node}/disks/lvm", "GET", &resp, req)
	return resp, err
}

// Create Create an LVM Volume Group
func (c *Client) Create(ctx context.Context, req CreateRequest) (string, error) {
	var resp string

	err := c.httpClient.Do(ctx, "/nodes/{node}/disks/lvm", "POST", &resp, req)
	return resp, err
}

// Delete Remove an LVM Volume Group.
func (c *Client) Delete(ctx context.Context, req DeleteRequest) (string, error) {
	var resp string

	err := c.httpClient.Do(ctx, "/nodes/{node}/disks/lvm/{name}", "DELETE", &resp, req)
	return resp, err
}
